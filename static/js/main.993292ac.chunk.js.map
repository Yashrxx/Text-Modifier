{"version":3,"sources":["components/About.js","components/Navbar.js","components/Alert.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["About","mystyle","setmystyle","useState","color","backgroundColor","btntext","setBtnTxt","React","createElement","className","style","id","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","data-bs-parent","onClick","dark_mode","Navbar","props","concat","mode","Link","to","title","aria-label","aria-current","aria-disabled","href","aboutText","toggleMode","height","width","cursor","Alert","alert","role","word","lower","toLowerCase","charAt","toUpperCase","slice","Capitalize","msg","TextForm","text","setText","useEffect","Fragment","Heading","value","onChange","event","console","log","target","rows","disabled","length","handleUpCase","newText","showalert","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","handleExtraSpaces","split","join","filter","element","App","setmode","btnText","setbtnTxt","setalert","message","setTimeout","Router","cls","body","classList","remove","add","Exampletextarea","Routes","Route","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.993292ac.chunk.js","sourcesContent":["import React, { useState } from 'react'\n// import PropTypes from 'prop-types';\nexport default function About() {\n    const [mystyle,setmystyle]=useState({color :'white',\n        backgroundColor:'black'});\n    const[btntext,setBtnTxt]=useState(\"Enable Light mode\")\n    const dark_mode=()=>{\n        if(mystyle.color==='white'){\n            setmystyle({\n            color :'black',\n            backgroundColor:'white'})\n            setBtnTxt(\"Enable Dark Mode\")\n        }\n        else {\n            setmystyle({\n                color :'white',\n                backgroundColor:'black'})\n            setBtnTxt(\"Enable Light Mode\")\n\n            }\n        }\n  return (\n    <div className='container' style={mystyle}>\n        <h2>About Us</h2>\n      <div className=\"accordion\" id=\"accordionExample\" style={mystyle}>\n  <div className=\"accordion-item\">\n    <h2 className=\"accordion-header\">\n      <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" style={mystyle} data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\n        Accordion Item #1\n      </button>\n    </h2>\n    <div id=\"collapseOne\" style={mystyle} className=\"accordion-collapse collapse show\" data-bs-parent=\"#accordionExample\">\n      <div className=\"accordion-body\">\n        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n      </div>\n    </div>\n  </div>\n  <div className=\"accordion-item\">\n    <h2 className=\"accordion-header\">\n      <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" style={mystyle} data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\n        Accordion Item #2\n      </button>\n    </h2>\n    <div id=\"collapseTwo\" style={mystyle} className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\n      <div className=\"accordion-body\">\n        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n      </div>\n    </div>\n  </div>\n  <div className=\"accordion-item\">\n    <h2 className=\"accordion-header\">\n      <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" style={mystyle} data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\n        Accordion Item #3\n      </button>\n    </h2>\n    <div id=\"collapseThree\" style={mystyle} className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\n      <div className=\"accordion-body\">\n        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n      </div>\n    </div>\n  </div>\n</div>\n<div className=\"container\">\n<button type=\"button\" onClick={dark_mode} className=\"btn btn-primary my-3\">{btntext}</button>\n</div>\n    </div>\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nexport default function Navbar(props) {\n  return (\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode} `}>\n      {/* <h1 className=\"Hello world\"  >{props.title}</h1> */}\n      <div className=\"container-fluid \">\n        <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n            <li className=\"nav-item\">\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link style={{ color: \"black\" }} className=\"nav-link\" to=\"/about\">About</Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link style={{ color: \"black\" }} className=\"nav-link disabled\" aria-disabled=\"true\" href=\"/\">{props.aboutText}</Link>\n            </li>\n          </ul>\n          {/* <form className=\"d-flex\" role=\"search\">\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\n      </form> */}\n          <div className=\"d-flex\">\n            <div className=\"bg-primary rounded mx-1\" onClick={() => { props.toggleMode('primary') }} style={{ height: '25px', width: '25px', cursor: 'pointer' }}></div>\n            <div className=\"bg-danger rounded mx-1\" onClick={() => { props.toggleMode('danger') }} style={{ height: '25px', width: '25px', cursor: 'pointer' }}></div>\n            <div className=\"bg-success rounded mx-1\" onClick={() => { props.toggleMode('success') }} style={{ height: '25px', width: '25px', cursor: 'pointer' }}></div>\n            <div className=\"bg-warning rounded mx-2\" onClick={() => { props.toggleMode('warning') }} style={{ height: '25px', width: '25px', cursor: 'pointer' }}></div>\n          </div>\n          <div className={`form-check form-switch text-${props.mode === 'light' ? 'black' : 'light'}`}>\n            {/* <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" onClick={()=>{props.toggleMode('null')}} id=\"flexSwitchCheckDefault\"/>\n      <label className=\"form-check-label\" onClick={props.toggleMode} htmlFor=\"flexSwitchCheckDefault\" >{props.btnText}</label> */}\n          </div>\n        </div>\n      </div>\n    </nav>\n  )\n}\nNavbar.propTypes = {\n  title: PropTypes.string,\n  aboutText: PropTypes.string\n}\n// Navbar.defaultProps={\n//   title : 'set title is here ',\n//   aboutText: 'about tect here '\n// }","import React from 'react'\n// import PropTypes from 'prop-types';\nexport default function Alert(props) {\n    const Capitalize=(word)=>{\n        const lower=word.toLowerCase()\n        return lower.charAt(0).toUpperCase()+lower.slice(1)\n      }\n  return (\n    <div style={{height:'50px'}} >\n    {props.alert &&<div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n    {Capitalize(props.alert.type)} : {props.alert.msg}\n    {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\n    </div>}\n    </div>\n  )\n}\n","import React, { useState,useEffect } from 'react'\nimport PropTypes from 'prop-types';\nexport default function TextForm(props) {\n    const[text,setText]=useState('Enter Text here ..');\n    useEffect(() => {\n        setText(\"new text\");\n      }, []);\n    // const [count, setCount] = useState(0);\n    const handleUpCase = () => {\n      let newText=text.toUpperCase();\n      setText(newText);\n      props.showalert(\"Converted to Upper Case\",\"success\")\n      // document.title=\"Textutils-Upper Case\"\n      };\n    const handleOnChange = (event) => {\n        console.log(\"On Change\")\n        setText(event.target.value);\n    };\n    const handleLowCase = (event) => {\n      let newText=text.toLowerCase();\n      setText(newText);\n      props.showalert(\"Converted to lower case\",\"success\")\n      // document.title=\"Textutils-Lower Case\"\n  };\n  const handleClrtxt = (event) => {\n    setText('');\n    props.showalert(\"Cleared Text\",\"success\")\n    // document.title=\"Textutils-Clear Text\"\n};\nconst handleCopy=(event)=>{\n  var text=document.getElementById(\"myBox\");\n  text.select();\n  text.setSelectionRange(0,9999);\n  navigator.clipboard.writeText(text.value);\n  props.showalert(\"Copied Text\",\"success\")\n  // document.title=\"Textutils-Copy Text\"\n}\nconst handleExtraSpaces=()=>{\n  let newText=text.split(/[ ]+ /);\n  setText(newText.join(\" \"))\n}\n// const TxtColor=props.mode ==='grey'?'white':'black';\n    return (\n      <>\n    <div className='container my-3' style={{color : props.mode==='grey'?'white':'black'}}>\n        <h3>{props.Heading}</h3>\n        <div className=\"my-3\">\n        {/* <label htmlFor=\"myBox\" className=\"form-label\">{props.Exampletextarea}</label> */}\n        <textarea className=\"form-control\" value={text} style={{color : props.mode==='grey'?'white':'black',backgroundColor : props.mode==='grey'?'rgb(36 74 104)':'white'}} onChange={handleOnChange} id=\"myBox\" rows=\"3\"></textarea>\n        </div>\n        <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleUpCase}>Convert to Uppercase</button>\n        <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleLowCase}>Convert to Lowercase</button>\n        <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleClrtxt}>Clear Text</button>\n        <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleCopy}>Copy Text</button>\n        <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\n        {/* <p>You clicked {count} times</p>\n        <button className=\"btn btn-primary\" onClick={() => setCount(count + 1)}>\n        Click me\n        </button> */}\n    </div>\n    <div className=\"container my-3\" style={{color : props.mode==='grey'?'white':'black'}}>\n      <h1>Your Text Summary</h1>\n      <p>{text.split(' ').filter((element)=>{return element.length!==0}).length} words and {text.length} charecters</p>\n      <h2>Preview</h2>\n      <p>{text.length>0?text:'Enter something to Preview'}</p>\n    </div>\n    </>\n    )\n}\nTextForm.propTypes={Heading : PropTypes.string,\n    Exampletextarea : PropTypes.string\n  }\n// TextForm.defaultProps={\n//     Heading : 'set title is here ',\n//     Exampletextarea: 'Example textarea -007 '\n//   }","// import logo from './logo.svg';\nimport React from 'react';\nimport { useState} from 'react';\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport Alert from './components/Alert';\nimport TextForm from './components/TextForm';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  // Link\n} from \"react-router-dom\";\nfunction App() {\n  const[mode,setmode]=useState('light');\n  const[btnText,setbtnTxt]=useState('Enable Dark Mode')\n  const[alert,setalert]=useState(null);\n  const showalert=(message,type)=>{\n    setalert({\n      msg:message,\n      type:type\n  })\n  setTimeout(() => {\n    setalert(null)\n  }, 2000);\n  }\n  const removebodycls=()=>{\n    document.body.classList.remove('bg-light')\n    document.body.classList.remove('bg-dark')\n    document.body.classList.remove('bg-success')\n    document.body.classList.remove('bg-primary')\n    document.body.classList.remove('bg-danger')\n    document.body.classList.remove('bg-warning')\n  }\n  const toggleMode=(cls)=>{\n    removebodycls()\n    console.log(cls)\n    document.body.classList.add('bg-'+cls)\n    if(mode==='light'){\n      setmode('grey');\n      setbtnTxt('Enable Light Mode')\n      document.body.style.backgroundColor = '#042743';\n      showalert(\"Dark mode has been enabled\",\"success\")\n      // setInterval(() => {\n      //   document.title=\"Textutils-Dark Mode\"\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title=\"Textutils is amazing\"\n      // }, 1500);\n    }\n    \n    else{\n      setmode('light')\n      setbtnTxt('Enable Dark Mode')\n      document.body.style.backgroundColor = 'white';\n      showalert(\"Light mode has been enabled\",\"success\")\n      // document.title=\"Textutils-Light Mode\"\n    }\n  }\n  return (\n    <>\n    <Router>\n    <Navbar title=\"TextUtils\" btnText={btnText} mode={mode} toggleMode={toggleMode} aboutText=\"About Us\"/>\n    <Alert alert={alert}/>\n    <TextForm Heading=\"Textutils-WordCounter | CharecterCounter | Uppercase to Lowercase | Lowercase to Uppercase\"  showalert={showalert} mode={mode} Exampletextarea=\"Example textarea -007 \"/>\n    <div className=\"container\">\n    <Routes>\n      <Route path=\"/about\"element={<About/>}/>\n    </Routes>\n    </div>\n    </Router>\n    </>\n    )\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}